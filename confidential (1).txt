import numpy as np
import pandas as pd
from sklearn.utils import resample
import statsmodels.api as sm

# Assuming `data` is your DataFrame with the outcome, treatment, and covariates
# `treatment` is your continuous treatment variable
# `outcome` is your binary outcome variable
# `covariates` is a list of your covariate column names

bootstrap_samples = 1000
coefficients = []

for _ in range(bootstrap_samples):
    # Create a bootstrap sample of the data
    bootstrap_sample = resample(data, replace=True, n_samples=len(data), random_state=None)
    
    # Fit your causal model
    model = sm.Logit(bootstrap_sample['outcome'], 
                     bootstrap_sample[['treatment'] + covariates])
    results = model.fit(disp=0)  # disp=0 suppresses the output
    
    # Store the coefficient of the treatment
    coefficients.append(results.params['treatment'])

# Convert to a numpy array for analysis
coefficients = np.array(coefficients)

# Calculate the 95% confidence interval
conf_interval = np.percentile(coefficients, [2.5, 97.5])

# Print the results
print(f"Coefficient estimates across bootstrap samples: {np.mean(coefficients)}")
print(f"95% confidence interval: {conf_interval}")
